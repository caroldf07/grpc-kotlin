//Versão do protoBuf que será utilizada
syntax = "proto3";

option java_multiple_files = true;
option java_package = "br.com.zup";
option java_outer_classname = "GrpcKotlin";

//Pacote onde as classes são geradas
package br.com.zup;
import "google/protobuf/timestamp.proto";

service FuncionarioService{

  //RPC realiza a função, no caso cadastrar onde envia Funcionario e retorna a Resposta
  rpc cadastrar(FuncionarioRequest) returns (FuncionarioResponse){}

}

enum Cargo{
  //Dentro de um enum, o = é relativo ao tipo da enum, pois quando a informação for serializada, é essa informação que será utilizada para
  //especificar qual é o enum
  DEV = 0;
  QA = 1;
  GERENTE = 2;
}

message FuncionarioRequest{
  //o = é relativo à posição do dado dentro do protobuf, pois o protobuf não é auto descritivo
  string nome = 1;
  string cpf = 2;
  int32 idade = 3;
  double salario = 4;
  bool ativo = 5;
  Cargo cargo = 6;
  //a palavra repeated significa que essa string terá um array de Endereco nela

  message Endereco{
    string logradouro = 1;
    string cep = 2;
    string complemento = 3;
  }
  repeated Endereco enderecos = 7;

}

message FuncionarioResponse{

  string nome = 1;
  google.protobuf.Timestamp criadoEm = 2;

}

